JavaEE - SpringBoot, Hibernate, JDBC, API and Servlets,

ðŸ“… Daily Learning Highlights Day 1 â€“ Core Java Basics

âœ… Arrays (1D & 2D)

âœ… main() method and its role

âœ… Static vs Non-Static concepts

Day 2 â€“ Object-Oriented Programming

ðŸ’¡ OOP Pillars: Class, Object, Inheritance, Polymorphism, Abstraction, Encapsulation

âš¡ Constructors vs Methods + Overloading

ðŸ”‘ Getters & Setters for data security

ðŸŒ€ Inner Classes, Overloading vs Overriding, Interfaces

ðŸ“¦ Wrapper Classes & String handling (String, StringBuffer, StringBuilder)

ðŸ’³ Hands-on: Fund Transfer Simulation with Account, DebitCard, and GPay classes

Day 3 â€“ Exception Handling & Multithreading

ðŸ”¹ Checked vs Unchecked Exceptions

ðŸ”¹ Tryâ€“Catchâ€“Throwâ€“Throws

ðŸš¨ User-Defined Exceptions

ðŸ”¹ Thread Lifecycle & Multi-threading

ðŸ”¹ Synchronization, join(), sleep(), and wait()

Day 4 â€“ Java Project Setup

âœ… Created Apache Maven project

âœ… Configured IntelliJ IDEA

âœ… Initialized Tomcat Server for frontendâ€“backend connection

Day 5 â€“ JSP & Servlets

âœ… Writing JSP files for dynamic web pages

âœ… Servlet Lifecycle (init(), service(), destroy())

âœ… Data sharing between JSPs via request & session

âœ… Using Listeners for application events

Day 6 & 7 â€“ CRUD Operations & Hibernate Intro

âœ¨ CRUD operations with JSP + Java backend

âœ¨ JSP-to-JSP redirection (e.g., banking service flow)

âœ¨ Hibernate with persistence.xml

âœ¨ Maven repositories & project flow

âœ¨ CRUD with Hibernate + JSP syntax

Day 8 â€“ Hibernate & Spring Boot Foundations

âœ… Hibernate Mappings (One-to-One, One-to-Many, Many-to-One, Many-to-Many)

âœ… Cascade Types & impact on DB operations

âœ… Logging levels: INFO, WARNING, DEBUG, ERROR

âœ… Criteria Builder for flexible queries

âœ… Hibernate vs JDBC comparison

âœ… Why industries prefer Spring Boot for scalable enterprise apps

Day 9 â€“ Team Project: CRUD Web Application

ðŸš€ Built a CRUD Web Application using Spring Boot and Thymeleaf

ðŸ‘¥ Collaborated with my team, practicing team coordination & project management

âœ… Implemented Create, Read, Update, Delete operations with a structured backend

âœ… Connected Thymeleaf templates for dynamic rendering of data

ðŸ’¡ Learned the importance of teamwork in real-world software development
